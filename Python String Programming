
Python Strings

single line string

# defining strings in Python
# all of the following are equivalent
my_string = 'Hello'
print(my_string)

my_string = "Hello"
print(my_string)

my_string = '''Hello'''
print(my_string)

# triple quotes string can extend multiple lines
my_string = """Hello, welcome to
           the world of Python"""
print(my_string)


-------------------------------

#Accessing string characters in Python
str = 'Hello User'
print(str)

#first character (forward indexing)
print(str[0])

#last character (backward indexing)
print(str[-1])

#slicing 2nd to 5th character (forward slicing)
print(str[1:5])

#slicing 6th to 2nd last character (backward slicing)
print(str[5:-2])

---------------------------------

Operations

# Python String Operations
str1 = 'Hello'
str2 ='World!'

# using +
print(str1 + str2)

# using *
print(str1 * 3)


Python Strings

single line string

# defining strings in Python
# all of the following are equivalent
my_string = 'Hello'
print(my_string)

my_string = "Hello"
print(my_string)

my_string = '''Hello'''
print(my_string)

# triple quotes string can extend multiple lines
my_string = """Hello, welcome to
           the world of Python"""
print(my_string)


-------------------------------

#Accessing string characters in Python
str = 'Hello User'
print(str)

#first character (forward indexing)
print(str[0])

#last character (backward indexing)
print(str[-1])

#slicing 2nd to 5th character (forward slicing)
print(str[1:5])

#slicing 6th to 2nd last character (backward slicing)
print(str[5:-2])

---------------------------------

Operations

# Python String Operations
str1 = 'Hello'
str2 ='World!'

# using +
print(str1 + str2)

# using *
print(str1 * 3)

................................

# Iterating through a string
count = 0
for letter in 'Hello World':
    if(letter == 'l'):
        count += 1
print(count,'letters found')

.................................

Check existence of a sub string in a string

print('H' in "hello")
.......................................

1. enumerate()	

It converts a string into a data structure i.e. list , tuple, dict
but it returns every alphabet in a key and value format i.e. k,v

eg:-

a = 'hello'
str = list(enumerate(a))
print(str)

output:-

[(0, 'h'), (1, 'e'), (2, 'l'), (3, 'l'), (4, 'o')]



2. len()----> length of string

3. always use '' inside "" and vice versa

a = "Hello 'Ram','Ravi'"

print(a)


4. format ----> output format


default_order = "{}, {} and {}".format('John','Bill','Sean')

print(default_order)


















